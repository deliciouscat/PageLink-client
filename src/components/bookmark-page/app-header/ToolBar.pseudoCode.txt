# ToolBar Animation Pseudo Code

Interface BoxSizingSystem(
    Properties(
        size: float,
        areaFor: str
    ),
    Functions(
        swap{
                구현: size와 areaFor를 유지하고 `Blank <-> TextInputBox` 변환. (사이즈가 1이 아닌 Blank는 TextInputBox로 변환될 수 없음)
            },
    )
)

Class Blank {implements: BoxSizingSystem}(
    Properties(
        size: float,
        areaFor: str,
    )
)

Class TextInputBox {implements: BoxSizingSystem}(
    Properties(
        size: 1,    // TextInputBox는 항상 1(최대비율) 사이즈임.
        areaFor: str
    )
)

appHeaderArea = `앱 헤더 영역 (바깥 클릭 확인하기 위해)`

search_button = IconButton("material-symbols: search icon")
add_button = IconButton("material-symbols: plus icon")
placement = [Blank(size: 1, areaFor: "default"), search_button, Blank(size: 0, areaFor: "search"), add_button, Blank(size: 0, areaFor: "add")]    // default
toolbar = dynamic HorizonalGrid(placement)

if `버튼이 클릭되면` :
    if last_click = "search" :
        Animate(placement)
        sleep(0.1 seconds)
        구현: `~.areaFor==last_click`인 Blank를 TextInputBox로 swap
        // 목표 : placement = [Blank(size: 0), search_button, Blank(size: 1), add_button, Blank(size:0)]
        placement.swap_blank_to(TextInputBox())

    if last_click = "add" :
        Animate(placement)
        sleep(0.1 seconds)
        구현: `~.areaFor==last_click`인 Blank를 TextInputBox로 swap
        // 목표 : placement = [Blank(size: 0), search_button, Blank(size: 0), add_button, Blank(size: 1)]
        placement.swap_blank_to(TextInputBox())

    if last_click not in ["search icon", "plus icon"] and last_click in appHeaderArea :
        // 목표 : placement = [Blank(size: 1), search_button, Blank(size: 0), add_button, Blank(size: 0)]    // back to default


## Animation Details

function Animate(placement){
    if TextInputBox in placement: 
        TextInputBox.swap
    구현: placement에서 `~.areaFor == last_click`인 Blank 요소의 size가 1이 되고 나머지 Blank들은 size가 0으로 축소되도록 animate.
}


## Output 양식
{
    toolbar_operation: "search" or "add",
    toolbar_input: str
}